* Changes in 3.5.2

** Web interface

*** Events panel shows RPC faults

*** Improved ontology browser

**** Namespace support

**** New panels for functions, relations, and rules

**** Visuals have been cleaned up

Yahoo's YUI is now used for almost all display elements.

**** Backend rebuilt around new JSON API

This makes for greater flexibilty for the future, and faster
performance in the meantime.

** WSMOStudio plugin

The IRS WSMOStudio plugin has been overhauled.  It now uses the IRS's
RESTful API, and supports namespaces.

More details about the plugin can be found at
http://www.wsmostudio.org/3rd-party.html

** APIs

*** REST API

Extended to support the uploading of ontologies, classes, and
instances.  Namespaces are properly supported.

*** Javascript API

Extended to support most of the browser's functionality.  Includes
services for listing and inspecting classes, instances, relations,
functions, and rules.  New service to install event monitors.
Namespaces are properly supported.

** New ‘REST’ grounding

Which is an entirely ontological grounding to HTTP services.  See
code/groundings/rest-grounding.lisp for details.

** Applications

*** New math application

This is intended to be a simple demonstrator for semantic web
services.  It uses RESTful services provided internally from the IRS
(via Hunchentoot), and the REST grounding.

*** New sEPC to BPMO translator application

*** New Yahoo application

Currently, this provides a description of the Yahoo search service.
In the future, it will support more of the Yahoo web services.

*** travel and trusted-travel

The timetable service is now provided by a RESTful service internal to
the IRS.  The REST grounding is used to connect to it.

** Miscellaneous

*** accurate-time support on Windows

** Code rearrangements

*** All code in thirdparty has moved to external

This means all code not owned by the IRS project is now kept in
‘external’, and managed through Git's submodule command.

*** Configuration files moved to ‘config’.

WebOnto and Lispweb configuration files now live in the toplevel
‘config’ directory.

*** IRS Lisp publisher moved to toplevel ‘publisher’

The SOAP services from code/soap-services have moved to
publisher/services.

*** LispWeb HTTP logs kept in toplevel ‘log’ directory

* Changes in 3.5.1

** IRS source now lives in Git

We moved our repositories for IRS (and the dependencies OCML and
WebOnto) from Subversion to Git.

** CXML-RPC replaces S-XML-RPC

CXML-RPC is a (pretty wild) port of S-XML-RPC, which we used to handle
the XML-RPC grounding and some web services we ran in the LHDL
application.

S-XML-RPC in turn depended on s-base64, s-sysdeps, and s-xml.  All
have been removed from the IRS tree's ‘thirdparty’ directory.

** An alpha version of ontological grounding

** Plugin API

The interface for loading ‘application’s within the IRS is generalised
to plugins.  Plugin types include applications, APIs, and core
functionality.

** IRS file tree cleaned up

*** Removal of junk

Many junk files (autogenerated files, session logs etc) were removed.

*** File extensions standardised to lower case.

*** Old-style MacOS line endings changed to Unix style

Files with old-style MacOS (before MacOS X) line endings (sole
carriage return) changed to the Unix format (line feed).

*** Rearranged

Third party code has been moved to the top level directory
‘thirdparty’.  Ontologies have moved to the top level directory
‘ontologies’.

** Visualiser no longer starts by defuault

** Web interface

*** Yahoo YUI

The IRS web interface now uses Yahoo's YUI Javascript toolkit.

*** Browser

Class hieararchy better behaved.  New panels to show relations and
instances.  New panel allowing OCML queries to be sent to the server.
Almost all the user interface components are drawn from Javascript,
not Lisp.

*** Events monitoring

Goal calls and returns are now shown.

** New REST API

* User visible and API changes to the IRS in 2007.

** WebOnto searches for ontologies by name.

Load files are no longer written in code/systems.

** IRS now opens network sockets on specific IP addresses.

Passing a value with the :host keyword to irs:start and
publisher:start causes server network sockets to be opened on the
specified IP address.  The HOST value can be a dotted decimal, a DNS
name, or NIL, in which case the programs listen on all available IP
addresses.  The NIL behaviour mirrors previous practice, and is the
default.

** New web interface.

The web interface for humans is now on port 8080.  It's built using
the Hunchentoot web server <http://www.weitz.de/hunchentoot/>.  Take a
look at the trusted-travel application to see how to use it.

*** Ajax ontology and class browser.

*** Ajax events visualiser.

*** Ajax graphical class graph viewer.

*** Web pages showing available goals and services.

On an IRS server, http://localhost:3000/ontologies now lists goals and
services, with hyperlinks to the OCML definitions.

* Applications

** IRS Applications

Now include:

    - LHDL

    - trusted-travel: a demonstration of the WSTO ontology for trust
      management.

IRS ‘applications’ can be loaded by calling irs:use-application.

USER> (irs:start)
USER> (irs:use-application :trusted-travel)

** Application interface

There is a new application loading interface, in
code/kernal/application.lisp.  Look at the trusted-travel for an
example of its use.

** Visualiser updates dynamically when applications are loaded.

** Ontologies can (and should!) be loaded from applications.

Not from the webonto-info/ontology-names file.  In the application
code, call webonto:require-ontologies.  

** Grounding to XML-RPC services.

** Configuration

*** IRS no longer comes with OCML or WebOnto.

These packages must be obtained separately.

*** IRS code location is now arbitrary.

IRS now calculates where it lives when you load the scripts/irs.lisp
file.


Local Variables:
mode: outline
End:
